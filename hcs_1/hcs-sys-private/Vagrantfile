# -*- mode: ruby -*-
# vi: set ft=ruby :
require 'yaml'


# Check plugin installations needed to build the VM
unless Vagrant.has_plugin?("vagrant-docker-compose")
  system("vagrant plugin install vagrant-docker-compose")
  puts "Dependencies installed, please try the command again."
  exit
end

unless Vagrant.has_plugin?("vagrant-digitalocean")
  system("vagrant plugin install vagrant-digitalocean")
  puts "Dependencies installed, please try the command again."
  exit
end


# Configure Virtual Machine
Vagrant.configure("2") do |config|
  #config.vm.box_download_insecure = true
  # Variables
  LEGACY_CONTAINER_PORT = 8050
  PROJECT_NAME = "hcs-sys-private-cloud"
  PRIVATE_KEY_PATH = '~/.ssh/id_ed25519'
  DO_BOX_URL = "https://github.com/devopsgroup-io/vagrant-digitalocean/raw/master/box/digital_ocean.box"
  TOKEN = begin
    YAML.load_file('token.yaml').fetch('digital_ocean_token')
  rescue Errno::ENOENT, KeyError
    '.'
  end

  config.vm.define "droplet-hcs-sys-private-cloud" do |config|
    config.vm.provider :digital_ocean do |provider, override|
      override.vm.box = 'digital_ocean'
      override.vm.box_url = DO_BOX_URL
      override.vm.allowed_synced_folder_types = :rsync

      # Digital Ocean Access Token 
      provider.token = TOKEN
      # SSH File to access the VM
      override.ssh.private_key_path = PRIVATE_KEY_PATH
      provider.ssh_key_name = "hcssh"
      
      # OS
      provider.image = 'ubuntu-21-04-x64'
      # Hardware specifications
      provider.size = 's-1vcpu-1gb'
      # Datacenter Region
      provider.region = 'fra1'
    end

    # Copy file to VM
    config.vm.synced_folder "legacy-container/", "/vagrant"

    # Make port accessible
    config.vm.network(:forwarded_port, guest: LEGACY_CONTAINER_PORT, host: LEGACY_CONTAINER_PORT)

    # Run inline shell - update system and install wireguard, generate private key
    
    config.vm.provision :shell, inline: "sudo apt-get update -y"
    config.vm.provision :shell, inline: "sudo apt-get -y install wireguard"
    config.vm.provision :shell, inline: "wg genkey | sudo tee /etc/wireguard/client_private.key | wg pubkey | sudo tee /etc/wireguard/client_public.key"
    config.vm.provision :shell, inline: "sudo chmod 600 /etc/wireguard/client_private.key"

    # Install docker and docker-compose
    config.vm.provision :docker
    config.vm.provision :docker_compose, env: { "PORT" => "#{LEGACY_CONTAINER_PORT}" }, yml: ["/vagrant/docker-compose.yaml"], rebuild: true, project_name: "#{PROJECT_NAME}", run: "always"
  end
end
