# -*- mode: ruby -*-
# vi: set ft=ruby :

unless Vagrant.has_plugin?("vagrant-docker-compose")
  system("vagrant plugin install vagrant-docker-compose")
  puts "Dependencies installed, please try the command again."
  exit
end

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"

  # Variables
  legacy_container_port = 8050
  project_name = "hcs-sys-private-cloud"

  # Copy file to VM
  config.vm.synced_folder "legacy-container/", "/vagrant"

  # Make port accessible
  config.vm.network(:forwarded_port, guest: legacy_container_port, host: legacy_container_port)

  # Run inline shell - update system and install wireguard, generate private key
  config.vm.provision :shell, inline: "apt-get update"
  config.vm.provision :shell, inline: "sudo apt-get -y install wireguard"
  config.vm.provision :shell, inline: "wg genkey > private"
  # config.vm.provision :shell, inline: "wg pubkey < private"
  # https://www.wireguard.com/quickstart/

  # Install docker and docker-compose
  config.vm.provision :docker
  config.vm.provision :docker_compose, env: { "PORT" => "#{legacy_container_port}" }, yml: ["/vagrant/docker-compose.yaml"], rebuild: true, project_name: "#{project_name}", run: "always"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  #  using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"
end
